<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yl.online.dao.VersionMapper">
  <resultMap id="BaseResultMap" type="com.yl.online.entity.Version">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="docId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="writeDate" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="docName" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yl.online.entity.Version">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="docId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="writeDate" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="docName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="content" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, docId, writeDate, docName
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from version_table
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from version_table
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yl.online.entity.Version">
    insert into version_table (id, docId, writeDate, 
      docName, content)
    values (#{id,jdbcType=INTEGER}, #{docid,jdbcType=INTEGER}, #{writedate,jdbcType=TIMESTAMP}, 
      #{docname,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yl.online.entity.Version">
    insert into version_table
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="docid != null">
        docId,
      </if>
      <if test="writedate != null">
        writeDate,
      </if>
      <if test="docname != null">
        docName,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="docid != null">
        #{docid,jdbcType=INTEGER},
      </if>
      <if test="writedate != null">
        #{writedate,jdbcType=TIMESTAMP},
      </if>
      <if test="docname != null">
        #{docname,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yl.online.entity.Version">
    update version_table
    <set>
      <if test="docid != null">
        docId = #{docid,jdbcType=INTEGER},
      </if>
      <if test="writedate != null">
        writeDate = #{writedate,jdbcType=TIMESTAMP},
      </if>
      <if test="docname != null">
        docName = #{docname,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yl.online.entity.Version">
    update version_table
    set docId = #{docid,jdbcType=INTEGER},
      writeDate = #{writedate,jdbcType=TIMESTAMP},
      docName = #{docname,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yl.online.entity.Version">
    update version_table
    set docId = #{docid,jdbcType=INTEGER},
      writeDate = #{writedate,jdbcType=TIMESTAMP},
      docName = #{docname,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>